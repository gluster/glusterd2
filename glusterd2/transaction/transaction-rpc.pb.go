// Code generated by protoc-gen-go. DO NOT EDIT.
// source: glusterd2/transaction/transaction-rpc.proto

package transaction

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TxnStepReq struct {
	StepFunc             string   `protobuf:"bytes,1,opt,name=StepFunc,proto3" json:"StepFunc,omitempty"`
	Context              []byte   `protobuf:"bytes,2,opt,name=Context,proto3" json:"Context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxnStepReq) Reset()         { *m = TxnStepReq{} }
func (m *TxnStepReq) String() string { return proto.CompactTextString(m) }
func (*TxnStepReq) ProtoMessage()    {}
func (*TxnStepReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c3c13f7a3182c1a, []int{0}
}

func (m *TxnStepReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxnStepReq.Unmarshal(m, b)
}
func (m *TxnStepReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxnStepReq.Marshal(b, m, deterministic)
}
func (m *TxnStepReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxnStepReq.Merge(m, src)
}
func (m *TxnStepReq) XXX_Size() int {
	return xxx_messageInfo_TxnStepReq.Size(m)
}
func (m *TxnStepReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TxnStepReq.DiscardUnknown(m)
}

var xxx_messageInfo_TxnStepReq proto.InternalMessageInfo

func (m *TxnStepReq) GetStepFunc() string {
	if m != nil {
		return m.StepFunc
	}
	return ""
}

func (m *TxnStepReq) GetContext() []byte {
	if m != nil {
		return m.Context
	}
	return nil
}

type TxnStepResp struct {
	Error                string   `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxnStepResp) Reset()         { *m = TxnStepResp{} }
func (m *TxnStepResp) String() string { return proto.CompactTextString(m) }
func (*TxnStepResp) ProtoMessage()    {}
func (*TxnStepResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c3c13f7a3182c1a, []int{1}
}

func (m *TxnStepResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxnStepResp.Unmarshal(m, b)
}
func (m *TxnStepResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxnStepResp.Marshal(b, m, deterministic)
}
func (m *TxnStepResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxnStepResp.Merge(m, src)
}
func (m *TxnStepResp) XXX_Size() int {
	return xxx_messageInfo_TxnStepResp.Size(m)
}
func (m *TxnStepResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TxnStepResp.DiscardUnknown(m)
}

var xxx_messageInfo_TxnStepResp proto.InternalMessageInfo

func (m *TxnStepResp) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*TxnStepReq)(nil), "transaction.TxnStepReq")
	proto.RegisterType((*TxnStepResp)(nil), "transaction.TxnStepResp")
}

func init() {
	proto.RegisterFile("glusterd2/transaction/transaction-rpc.proto", fileDescriptor_8c3c13f7a3182c1a)
}

var fileDescriptor_8c3c13f7a3182c1a = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4e, 0xcf, 0x29, 0x2d,
	0x2e, 0x49, 0x2d, 0x4a, 0x31, 0xd2, 0x2f, 0x29, 0x4a, 0xcc, 0x2b, 0x4e, 0x4c, 0x2e, 0xc9, 0xcc,
	0xcf, 0x43, 0x66, 0xeb, 0x16, 0x15, 0x24, 0xeb, 0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x71, 0x23,
	0x09, 0x2b, 0x39, 0x71, 0x71, 0x85, 0x54, 0xe4, 0x05, 0x97, 0xa4, 0x16, 0x04, 0xa5, 0x16, 0x0a,
	0x49, 0x71, 0x71, 0x80, 0x98, 0x6e, 0xa5, 0x79, 0xc9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41,
	0x70, 0xbe, 0x90, 0x04, 0x17, 0xbb, 0x73, 0x7e, 0x5e, 0x49, 0x6a, 0x45, 0x89, 0x04, 0x93, 0x02,
	0xa3, 0x06, 0x4f, 0x10, 0x8c, 0xab, 0xa4, 0xcc, 0xc5, 0x0d, 0x37, 0xa3, 0xb8, 0x40, 0x48, 0x84,
	0x8b, 0xd5, 0xb5, 0xa8, 0x28, 0xbf, 0x08, 0x6a, 0x02, 0x84, 0x63, 0xe4, 0xc1, 0xc5, 0x06, 0x52,
	0x54, 0x96, 0x2c, 0x64, 0xc7, 0xc5, 0x1e, 0x54, 0x0a, 0x56, 0x2e, 0x24, 0xae, 0x87, 0xe4, 0x16,
	0x3d, 0x84, 0x43, 0xa4, 0x24, 0xb0, 0x4b, 0x14, 0x17, 0x28, 0x31, 0x24, 0xb1, 0x81, 0xbd, 0x61,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x69, 0x42, 0xfa, 0xe6, 0xf5, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TxnSvcClient is the client API for TxnSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TxnSvcClient interface {
	RunStep(ctx context.Context, in *TxnStepReq, opts ...grpc.CallOption) (*TxnStepResp, error)
}

type txnSvcClient struct {
	cc *grpc.ClientConn
}

func NewTxnSvcClient(cc *grpc.ClientConn) TxnSvcClient {
	return &txnSvcClient{cc}
}

func (c *txnSvcClient) RunStep(ctx context.Context, in *TxnStepReq, opts ...grpc.CallOption) (*TxnStepResp, error) {
	out := new(TxnStepResp)
	err := c.cc.Invoke(ctx, "/transaction.TxnSvc/RunStep", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TxnSvcServer is the server API for TxnSvc service.
type TxnSvcServer interface {
	RunStep(context.Context, *TxnStepReq) (*TxnStepResp, error)
}

func RegisterTxnSvcServer(s *grpc.Server, srv TxnSvcServer) {
	s.RegisterService(&_TxnSvc_serviceDesc, srv)
}

func _TxnSvc_RunStep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxnStepReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxnSvcServer).RunStep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transaction.TxnSvc/RunStep",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxnSvcServer).RunStep(ctx, req.(*TxnStepReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TxnSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transaction.TxnSvc",
	HandlerType: (*TxnSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RunStep",
			Handler:    _TxnSvc_RunStep_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "glusterd2/transaction/transaction-rpc.proto",
}
